/*
 * MIT License
 *
 * Copyright (c) 2016 Maurice Gschwind
 * Copyright (c) 2016 Samuel Merki
 * Copyright (c) 2016 Joel Wasmer
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

buildscript {
	ext {
		springBootVersion = '1.3.5.RELEASE'
	}
	repositories {
		mavenCentral()
        jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'org.hidetake:gradle-ssh-plugin:1.5.0'
	}
}

plugins {
	id "org.sonarqube" version "2.0.1"
}


apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'spring-boot' 

apply plugin: 'idea'
apply plugin: "jacoco"

springBoot {
	executable = true
}

jar {
	baseName = 'allDone'
	version = '1.0.0-RELEASE'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

configurations {
	providedRuntime
}

test {
	reports {
		junitXml.enabled = true
		html.enabled = true
	}
}

jacoco {
	toolVersion = "0.7.6.201602180812"
	reportsDir = file("$buildDir/jacoco-results")
}

jacocoTestReport {
	reports {
		xml.enabled false
		csv.enabled false
		html.destination "${buildDir}/reports/jacoco"
	}
}

test.ignoreFailures = true

task compileFrontend() {

}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-mongodb')
	compile('org.springframework.boot:spring-boot-starter-mail')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('io.jsonwebtoken:jjwt:0.6.0')
	// Templating engine for mail
	compile('org.apache.velocity:velocity:1.7')

//	compile('org.springframework.boot:spring-boot-starter-tomcat')

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('com.jayway.jsonpath:json-path:2.2.0')
	// http://mvnrepository.com/artifact/com.icegreen/greenmail
	testCompile group: 'com.icegreen', name: 'greenmail', version: '1.5.0'
	// For date comparisons
	testCompile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'


}


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.9'
}
